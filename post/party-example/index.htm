<section class="description-section">
  <h2>Having a Party with P</h2>
  <p>
    <a href="resource/image/party-example.png">
      <img src="resource/image/party-example-no-header.png" />
    </a>
    <ol>
      <li>Alice connects to onramp-1, Charlie connects to onramp-2, Bob connects to onramp-1 and onramp-2.</li>
      <li>Bob connects to Alice and Charlie with the help of onramp-1 and onramp-2, respectively.</li>
      <li>Alice connects to Charlie with the help of Bob.</li>
    </ol>
  </p>

  <h3>Running the Example</h3>
  <p>
    You'll first need <a href="http://nodejs.org/">Node.js 0.10+</a> and 
    <a href="http://google.com/chrome">Chrome 26+</a> or <a href="www.getfirefox.com/â€Ž">Firefox 23+</a>. Once you have those installed,
    open up your terminal and execute the following (you may need <code>sudo</code>):
  </p>

  <pre class="prettyprint">
npm install -g onramp; # installs the onramp server
npm install -g p-examples; # installs the p examples server
onramp&amp; # start the onramp server in the background on default port 20500
onramp -h :20400&amp; # start the second onramp server in the background on port 20400
p-examples; # start the example server in the foreground
</pre>

  <p>
    Now, open these documents in different tabs:
    <ul>
      <li>
        <a href="http://localhost:20501/party/bob.html">http://localhost:20501/party/bob.html</a>
      </li>
      <li>
        <a href="http://localhost:20501/party/alice.html">http://localhost:20501/party/alice.html</a>
      </li>
      <li>
        <a href="http://localhost:20501/party/charlie.html">http://localhost:20501/party/charlie.html</a>
      </li>
    </ul>
  </p>
  <p>
    If you now check the JavaScript console for alice.html, you should see:
    <pre>
connecting to onramp server at ws://localhost:20500/
476a7fb3-a974-4382-9702-b05c3eefb28f  connected via  ws://localhost:20500/
476a7fb3-a974-4382-9702-b05c3eefb28f  -->  Welcome to the party, I'm Bob!
476a7fb3-a974-4382-9702-b05c3eefb28f  -->  026395ed-50dc-4198-9be6-f9bc6cbdbfbb is also here.
connecting to peer at 026395ed-50dc-4198-9be6-f9bc6cbdbfbb via 476a7fb3-a974-4382-9702-b05c3eefb28f
026395ed-50dc-4198-9be6-f9bc6cbdbfbb  <-- Hi, I'm Alice!
026395ed-50dc-4198-9be6-f9bc6cbdbfbb  -->  Hi, I'm Charlie!</pre>
  
  This means that Alice was successfully able to connect to Charlie.
  </p>

  <h3>What Happened</h3>
  <p>
    For the sake of simplicity, we hosted everything on one machine. We could
    have just as easily hosted each node (onramp servers, browsers) 
    in a different machine -- all we would have to change is the address to the 
    onramp servers.
  </p>
  <p>
    You can read each of the scripts to see what they were doing:
    <ul>
      <li>
        <a href="https://github.com/unsetbit/p/blob/master/examples/party/bob.html">bob.html</a>,
        connected to both onramp servers and used them to establish connections to both
        Alice and Charlie.
      </li>
      <li>
        <a href="https://github.com/unsetbit/p/blob/master/examples/party/alice.html">alice.html</a>,
        connected to onramp-1, then accepted a connection Bob, and finally asked to be connected
        to Charlie with the help of Bob.
      </li>
      <li>
        <a href="https://github.com/unsetbit/p/blob/master/examples/party/Charlie.html">charlie.html</a>,
        connected to onramp-2, then accepted any connection requests made to it.
      </li>
      <li>
        <a href="https://github.com/unsetbit/onramp/blob/master/bin/onramp">onramp</a>,
        a basic WebSocket server which helps browsers connect to each other.
      </li>
    </ul>
  </p>
</section>
